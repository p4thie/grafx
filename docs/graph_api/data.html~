<!doctype html>
<html class="no-js" lang="en" data-content_root="../">
  <head><meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width,initial-scale=1"/>
    <meta name="color-scheme" content="light dark"><meta name="viewport" content="width=device-width, initial-scale=1" />
<link rel="index" title="Index" href="../genindex.html" /><link rel="search" title="Search" href="../search.html" /><link rel="next" title="grafx.render" href="render.html" /><link rel="prev" title="Batched Audio Processing" href="../introduction/render.html" />

    <link rel="shortcut icon" href="../_static/favicon.ico"/><!-- Generated with Sphinx 7.4.7 and Furo 2024.07.18 -->
        <title>grafx.data - GRAFX Documentation</title>
      <link rel="stylesheet" type="text/css" href="../_static/pygments.css?v=a746c00c" />
    <link rel="stylesheet" type="text/css" href="../_static/styles/furo.css?v=613ab9ff" />
    <link rel="stylesheet" type="text/css" href="../_static/styles/furo-extensions.css?v=302659d7" />
    <link rel="stylesheet" type="text/css" href="../_static/css/custom.css?v=a6743078" />
    
    


<style>
  body {
    --color-code-background: #f8f8f8;
  --color-code-foreground: black;
  
  }
  @media not print {
    body[data-theme="dark"] {
      --color-code-background: #202020;
  --color-code-foreground: #d0d0d0;
  
    }
    @media (prefers-color-scheme: dark) {
      body:not([data-theme="light"]) {
        --color-code-background: #202020;
  --color-code-foreground: #d0d0d0;
  
      }
    }
  }
</style></head>
  <body>
    
    <script>
      document.body.dataset.theme = localStorage.getItem("theme") || "auto";
    </script>
    

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
  <symbol id="svg-toc" viewBox="0 0 24 24">
    <title>Contents</title>
    <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 1024 1024">
      <path d="M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM115.4 518.9L271.7 642c5.8 4.6 14.4.5 14.4-6.9V388.9c0-7.4-8.5-11.5-14.4-6.9L115.4 505.1a8.74 8.74 0 0 0 0 13.8z"/>
    </svg>
  </symbol>
  <symbol id="svg-menu" viewBox="0 0 24 24">
    <title>Menu</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather-menu">
      <line x1="3" y1="12" x2="21" y2="12"></line>
      <line x1="3" y1="6" x2="21" y2="6"></line>
      <line x1="3" y1="18" x2="21" y2="18"></line>
    </svg>
  </symbol>
  <symbol id="svg-arrow-right" viewBox="0 0 24 24">
    <title>Expand</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather-chevron-right">
      <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
  </symbol>
  <symbol id="svg-sun" viewBox="0 0 24 24">
    <title>Light mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="feather-sun">
      <circle cx="12" cy="12" r="5"></circle>
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </svg>
  </symbol>
  <symbol id="svg-moon" viewBox="0 0 24 24">
    <title>Dark mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-moon">
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
    </svg>
  </symbol>
  <symbol id="svg-sun-with-moon" viewBox="0 0 24 24">
    <title>Auto light/dark, in light mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round"
      class="icon-custom-derived-from-feather-sun-and-tabler-moon">
      <path style="opacity: 50%" d="M 5.411 14.504 C 5.471 14.504 5.532 14.504 5.591 14.504 C 3.639 16.319 4.383 19.569 6.931 20.352 C 7.693 20.586 8.512 20.551 9.25 20.252 C 8.023 23.207 4.056 23.725 2.11 21.184 C 0.166 18.642 1.702 14.949 4.874 14.536 C 5.051 14.512 5.231 14.5 5.411 14.5 L 5.411 14.504 Z"/>
      <line x1="14.5" y1="3.25" x2="14.5" y2="1.25"/>
      <line x1="14.5" y1="15.85" x2="14.5" y2="17.85"/>
      <line x1="10.044" y1="5.094" x2="8.63" y2="3.68"/>
      <line x1="19" y1="14.05" x2="20.414" y2="15.464"/>
      <line x1="8.2" y1="9.55" x2="6.2" y2="9.55"/>
      <line x1="20.8" y1="9.55" x2="22.8" y2="9.55"/>
      <line x1="10.044" y1="14.006" x2="8.63" y2="15.42"/>
      <line x1="19" y1="5.05" x2="20.414" y2="3.636"/>
      <circle cx="14.5" cy="9.55" r="3.6"/>
    </svg>
  </symbol>
  <symbol id="svg-moon-with-sun" viewBox="0 0 24 24">
    <title>Auto light/dark, in dark mode</title>
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round"
      class="icon-custom-derived-from-feather-sun-and-tabler-moon">
      <path d="M 8.282 7.007 C 8.385 7.007 8.494 7.007 8.595 7.007 C 5.18 10.184 6.481 15.869 10.942 17.24 C 12.275 17.648 13.706 17.589 15 17.066 C 12.851 22.236 5.91 23.143 2.505 18.696 C -0.897 14.249 1.791 7.786 7.342 7.063 C 7.652 7.021 7.965 7 8.282 7 L 8.282 7.007 Z"/>
      <line style="opacity: 50%" x1="18" y1="3.705" x2="18" y2="2.5"/>
      <line style="opacity: 50%" x1="18" y1="11.295" x2="18" y2="12.5"/>
      <line style="opacity: 50%" x1="15.316" y1="4.816" x2="14.464" y2="3.964"/>
      <line style="opacity: 50%" x1="20.711" y1="10.212" x2="21.563" y2="11.063"/>
      <line style="opacity: 50%" x1="14.205" y1="7.5" x2="13.001" y2="7.5"/>
      <line style="opacity: 50%" x1="21.795" y1="7.5" x2="23" y2="7.5"/>
      <line style="opacity: 50%" x1="15.316" y1="10.184" x2="14.464" y2="11.036"/>
      <line style="opacity: 50%" x1="20.711" y1="4.789" x2="21.563" y2="3.937"/>
      <circle style="opacity: 50%" cx="18" cy="7.5" r="2.169"/>
    </svg>
  </symbol>
  <symbol id="svg-pencil" viewBox="0 0 24 24">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-pencil-code">
      <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" />
      <path d="M13.5 6.5l4 4" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
  </symbol>
  <symbol id="svg-eye" viewBox="0 0 24 24">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor"
      stroke-width="1" stroke-linecap="round" stroke-linejoin="round" class="icon-tabler-eye-code">
      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
      <path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0" />
      <path
        d="M11.11 17.958c-3.209 -.307 -5.91 -2.293 -8.11 -5.958c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6c-.21 .352 -.427 .688 -.647 1.008" />
      <path d="M20 21l2 -2l-2 -2" />
      <path d="M17 17l-2 2l2 2" />
    </svg>
  </symbol>
</svg>

<input type="checkbox" class="sidebar-toggle" name="__navigation" id="__navigation">
<input type="checkbox" class="sidebar-toggle" name="__toc" id="__toc">
<label class="overlay sidebar-overlay" for="__navigation">
  <div class="visually-hidden">Hide navigation sidebar</div>
</label>
<label class="overlay toc-overlay" for="__toc">
  <div class="visually-hidden">Hide table of contents sidebar</div>
</label>

<a class="skip-to-content muted-link" href="#furo-main-content">Skip to content</a>



<div class="page">
  <header class="mobile-header">
    <div class="header-left">
      <label class="nav-overlay-icon" for="__navigation">
        <div class="visually-hidden">Toggle site navigation sidebar</div>
        <i class="icon"><svg><use href="#svg-menu"></use></svg></i>
      </label>
    </div>
    <div class="header-center">
      <a href="../index.html"><div class="brand">GRAFX Documentation</div></a>
    </div>
    <div class="header-right">
      <div class="theme-toggle-container theme-toggle-header">
        <button class="theme-toggle">
          <div class="visually-hidden">Toggle Light / Dark / Auto color theme</div>
          <svg class="theme-icon-when-auto-light"><use href="#svg-sun-with-moon"></use></svg>
          <svg class="theme-icon-when-auto-dark"><use href="#svg-moon-with-sun"></use></svg>
          <svg class="theme-icon-when-dark"><use href="#svg-moon"></use></svg>
          <svg class="theme-icon-when-light"><use href="#svg-sun"></use></svg>
        </button>
      </div>
      <label class="toc-overlay-icon toc-header-icon" for="__toc">
        <div class="visually-hidden">Toggle table of contents sidebar</div>
        <i class="icon"><svg><use href="#svg-toc"></use></svg></i>
      </label>
    </div>
  </header>
  <aside class="sidebar-drawer">
    <div class="sidebar-container">
      
      <div class="sidebar-sticky"><a class="sidebar-brand" href="../index.html">
  
  
  <span class="sidebar-brand-text">GRAFX Documentation</span>
  
</a><form class="sidebar-search-container" method="get" action="../search.html" role="search">
  <input class="sidebar-search" placeholder="Search" name="q" aria-label="Search">
  <input type="hidden" name="check_keywords" value="yes">
  <input type="hidden" name="area" value="default">
</form>
<div id="searchbox"></div><div class="sidebar-scroll"><div class="sidebar-tree">
  <p class="caption" role="heading"><span class="caption-text">Introduction</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../introduction/graph.html">Audio Processing Graphs</a></li>
<li class="toctree-l1"><a class="reference internal" href="../introduction/processors.html">Differentiable Processors</a></li>
<li class="toctree-l1"><a class="reference internal" href="../introduction/render.html">Batched Audio Processing</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">Graph API</span></p>
<ul class="current">
<li class="toctree-l1 current current-page"><a class="current reference internal" href="#">grafx.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="render.html">grafx.render</a></li>
<li class="toctree-l1"><a class="reference internal" href="draw.html">grafx.draw</a></li>
<li class="toctree-l1"><a class="reference internal" href="utils.html">grafx.utils</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">Processor API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/core.html">grafx.processors.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/filter.html">grafx.processors.filter</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/eq.html">grafx.processors.eq</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/stereo.html">grafx.processors.stereo</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/dynamics.html">grafx.processors.dynamics</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/nonlinear.html">grafx.processors.nonlinear</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/reverb.html">grafx.processors.reverb</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/delay.html">grafx.processors.delay</a></li>
<li class="toctree-l1"><a class="reference internal" href="../processor_api/container.html">grafx.processors.container</a></li>
</ul>
<p class="caption" role="heading"><span class="caption-text">References</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../references/history.html">Versions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../references/reference.html">References</a></li>
</ul>

</div>
</div>

      </div>
      
    </div>
  </aside>
  <div class="main">
    <div class="content">
      <div class="article-container">
        <a href="#" class="back-to-top muted-link">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M13 20h-2V8l-5.5 5.5-1.42-1.42L12 4.16l7.92 7.92-1.42 1.42L13 8v12z"></path>
          </svg>
          <span>Back to top</span>
        </a>
        <div class="content-icon-container">
          <div class="theme-toggle-container theme-toggle-content">
            <button class="theme-toggle">
              <div class="visually-hidden">Toggle Light / Dark / Auto color theme</div>
              <svg class="theme-icon-when-auto-light"><use href="#svg-sun-with-moon"></use></svg>
              <svg class="theme-icon-when-auto-dark"><use href="#svg-moon-with-sun"></use></svg>
              <svg class="theme-icon-when-dark"><use href="#svg-moon"></use></svg>
              <svg class="theme-icon-when-light"><use href="#svg-sun"></use></svg>
            </button>
          </div>
          <label class="toc-overlay-icon toc-content-icon" for="__toc">
            <div class="visually-hidden">Toggle table of contents sidebar</div>
            <i class="icon"><svg><use href="#svg-toc"></use></svg></i>
          </label>
        </div>
        <article role="main" id="furo-main-content">
          <section id="grafx-data">
<h1>grafx.data<a class="headerlink" href="#grafx-data" title="Link to this heading"></a></h1>
<dl class="py class" id="module-grafx.data.configs">
<dt class="sig sig-object py" id="grafx.data.configs.NodeConfigs">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">NodeConfigs</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">config</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.configs.NodeConfigs" title="Link to this definition"></a></dt>
<dd><p>An object that stores configurations of node types and handles various utility tasks,
e.g., converting each node type <code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code> to <code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>, or vice versa.
By default, the utility types, <code class="code highlight python docutils literal highlight-python"><span class="s2">&quot;in&quot;</span></code>, <code class="code highlight python docutils literal highlight-python"><span class="s2">&quot;out&quot;</span></code>, and <code class="code highlight python docutils literal highlight-python"><span class="s2">&quot;mix&quot;</span></code>,
are automatically included.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><p><strong>config</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="nb">list</span><span class="p">,</span> <span class="nb">dict</span><span class="p">]</span></code>) – The configuration data for the nodes.
If a <code class="code highlight python docutils literal highlight-python"><span class="nb">list</span></code>, it is assumed to contain node types.
If a <code class="code highlight python docutils literal highlight-python"><span class="nb">dict</span></code>, it should map node types to their specific configurations.</p>
</dd>
<dt class="field-even">Variables<span class="colon">:</span></dt>
<dd class="field-even"><ul class="simple">
<li><p><strong>node_type_dict</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">dict</span><span class="p">]</span></code>) – The full configuration for the given node types.</p></li>
<li><p><strong>node_types</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">list</span></code> of <code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>) – List of node types.</p></li>
<li><p><strong>node_type_to_index</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">int</span><span class="p">]</span></code>) – Mapping from node types to their indices.</p></li>
<li><p><strong>num_node_types</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – The total number of node types.</p></li>
<li><p><strong>num_inlets</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">int</span><span class="p">]</span></code>) – Number of inlets for each node type.</p></li>
<li><p><strong>num_outlets</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">int</span><span class="p">]</span></code>) – Number of outlets for each node type.</p></li>
<li><p><strong>siso_only</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">bool</span></code>) – Indicates if we only have single-input single-output (SISO) systems.</p></li>
<li><p><strong>max_num_inlets</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code> <em>when</em> <code class="code highlight python docutils literal highlight-python"><span class="n">siso_only</span><span class="o">=</span><span class="kc">False</span></code>) – Maximum number of inlets.</p></li>
<li><p><strong>max_num_outlets</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code> <em>when</em> <code class="code highlight python docutils literal highlight-python"><span class="n">siso_only</span><span class="o">=</span><span class="kc">False</span></code>) – Maximum number of outlets.</p></li>
<li><p><strong>inlet_to_index</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">int</span><span class="p">]]</span></code> <em>when</em> <code class="code highlight python docutils literal highlight-python"><span class="n">siso_only</span><span class="o">=</span><span class="kc">False</span></code>) – Nested <code class="code highlight python docutils literal highlight-python"><span class="nb">dict</span></code> of type-to-inlet-to-index.</p></li>
<li><p><strong>outlet_to_index</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="n">Dict</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">int</span><span class="p">]]</span></code> <em>when</em> <code class="code highlight python docutils literal highlight-python"><span class="n">siso_only</span><span class="o">=</span><span class="kc">False</span></code>) – Nested <code class="code highlight python docutils literal highlight-python"><span class="nb">dict</span></code> of type-to-outlet-to-index.</p></li>
</ul>
</dd>
</dl>
</dd></dl>

<dl class="py class" id="module-grafx.data.graph">
<dt class="sig sig-object py" id="grafx.data.graph.GRAFX">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">GRAFX</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">config</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">invalid_op</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'error'</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.graph.GRAFX" title="Link to this definition"></a></dt>
<dd><p>A base class for audio processing graph.
It can be used for creating and modifying a graph.
It inherits <code class="code highlight python docutils literal highlight-python"><span class="n">MultiDiGraph</span></code> class from <code class="code highlight python docutils literal highlight-python"><span class="n">networkx</span></code>.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>config</strong> (<a class="reference internal" href="#grafx.data.configs.NodeConfigs" title="grafx.data.configs.NodeConfigs"><code class="xref py py-class docutils literal notranslate"><span class="pre">NodeConfigs</span></code></a>, <em>optional</em>) – Node type configurations
(default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
<li><p><strong>invalid_op</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>, <em>optional</em>) – Behavior when an invalid operation is performed (“error”, “warn”, “mute”)
(default: <code class="code highlight python docutils literal highlight-python"><span class="s2">&quot;error&quot;</span></code>).</p></li>
</ul>
</dd>
<dt class="field-even">Variables<span class="colon">:</span></dt>
<dd class="field-even"><ul class="simple">
<li><p><strong>counter</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">],</span> <span class="nb">int</span><span class="p">]</span></code>) – A counter (for each graph, if it is a batched graph) for the number of nodes.</p></li>
<li><p><strong>consecutive_ids</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">bool</span></code>) – Indicates if node IDs are consecutive. This is useful when converting the graph to a tensor with the preserved order.</p></li>
<li><p><strong>batch</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">bool</span></code>) – Indicates if the graph is a single large disconnected graph created by batching multiple graphs.</p></li>
<li><p><strong>config</strong> (<a class="reference internal" href="#grafx.data.configs.NodeConfigs" title="grafx.data.configs.NodeConfigs"><code class="xref py py-class docutils literal notranslate"><span class="pre">NodeConfigs</span></code></a>) – Node type configurations.</p></li>
<li><p><strong>config_hash</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – Hash value of the configuration.</p></li>
<li><p><strong>invalid_op</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>) – Behavior when an invalid operation is performed.</p></li>
<li><p><strong>rendering_order_method</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>) – Method used for determining the rendering order.
Set to <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code> unless running a <code class="xref py py-func docutils literal notranslate"><span class="pre">return_render_ordered_graph()</span></code>.</p></li>
<li><p><strong>type_sequence</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">list</span></code>) – Node type sequence for the output audio rendering.
Set to <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code> unless running a <code class="xref py py-func docutils literal notranslate"><span class="pre">return_render_ordered_graph()</span></code>.</p></li>
</ul>
</dd>
</dl>
<dl class="py method">
<dt class="sig sig-object py" id="grafx.data.graph.GRAFX.add">
<span class="sig-name descname"><span class="pre">add</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">node_type</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">parameters</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">name</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.graph.GRAFX.add" title="Link to this definition"></a></dt>
<dd><p>Adds a new node to the graph.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>node_type</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>) – The type of the node to be added.</p></li>
<li><p><strong>parameters</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">PARAMETER_TYPE</span></code>, <em>optional</em>) – Parameters for the node (default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
<li><p><strong>name</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>, <em>optional</em>) – Name of the node (default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
</ul>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p>The ID of the newly added node.</p>
</dd>
<dt class="field-odd">Return type<span class="colon">:</span></dt>
<dd class="field-odd"><p><code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code></p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="grafx.data.graph.GRAFX.remove">
<span class="sig-name descname"><span class="pre">remove</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">node_id</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.graph.GRAFX.remove" title="Link to this definition"></a></dt>
<dd><p>Removes a node from the graph and returns its connected edges.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><p><strong>node_id</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – The ID of the node to be removed.</p>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p>Incoming edges and outgoing edges of the removed node.</p>
</dd>
<dt class="field-odd">Return type<span class="colon">:</span></dt>
<dd class="field-odd"><p><code class="code highlight python docutils literal highlight-python"><span class="n">Tuple</span><span class="p">[</span><span class="nb">list</span><span class="p">,</span> <span class="nb">list</span><span class="p">]</span></code></p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="grafx.data.graph.GRAFX.connect">
<span class="sig-name descname"><span class="pre">connect</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">source_id</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">dest_id</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">outlet</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'main'</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">inlet</span></span><span class="o"><span class="pre">=</span></span><span class="default_value"><span class="pre">'main'</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.graph.GRAFX.connect" title="Link to this definition"></a></dt>
<dd><p>Connects two nodes in the graph.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>source_id</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – The ID of the source node.</p></li>
<li><p><strong>dest_id</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – The ID of the destination node.</p></li>
<li><p><strong>outlet</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>, <em>optional</em>) – The outlet of the source node (default: <code class="code highlight python docutils literal highlight-python"><span class="s2">&quot;main&quot;</span></code>).</p></li>
<li><p><strong>inlet</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>, <em>optional</em>) – The inlet of the destination node (default: <code class="code highlight python docutils literal highlight-python"><span class="s2">&quot;main&quot;</span></code>).</p></li>
</ul>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p><code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code></p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt class="sig sig-object py" id="grafx.data.graph.GRAFX.add_serial_chain">
<span class="sig-name descname"><span class="pre">add_serial_chain</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">node_list</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.graph.GRAFX.add_serial_chain" title="Link to this definition"></a></dt>
<dd><p>Adds a serial chain of nodes.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><p><strong>node_list</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">List</span><span class="p">[</span><span class="n">Union</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="nb">dict</span><span class="p">]]</span></code>) – A list of nodes, each given as a type
or a dictionary that forms keyword arguments for the <a class="reference internal" href="#grafx.data.graph.GRAFX.add" title="grafx.data.graph.GRAFX.add"><code class="xref py py-func docutils literal notranslate"><span class="pre">add()</span></code></a> method.</p>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p>The IDs of the first and last nodes in the chain.</p>
</dd>
<dt class="field-odd">Return type<span class="colon">:</span></dt>
<dd class="field-odd"><p><code class="code highlight python docutils literal highlight-python"><span class="n">Tuple</span><span class="p">[</span><span class="nb">int</span><span class="p">,</span> <span class="nb">int</span><span class="p">]</span></code></p>
</dd>
</dl>
</dd></dl>

</dd></dl>

<dl class="py class" id="module-grafx.data.tensor">
<dt class="sig sig-object py" id="grafx.data.tensor.GRAFXTensor">
<em class="property"><span class="pre">class</span><span class="w"> </span></em><span class="sig-name descname"><span class="pre">GRAFXTensor</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">node_types</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">LongTensor</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">edge_indices</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">LongTensor</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">counter</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">int</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">batch</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">bool</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">config</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><a class="reference internal" href="#grafx.data.configs.NodeConfigs" title="grafx.data.configs.NodeConfigs"><span class="pre">NodeConfigs</span></a></span></em>, <em class="sig-param"><span class="n"><span class="pre">config_hash</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">str</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">invalid_op</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">str</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">edge_types</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">LongTensor</span><span class="w"> </span><span class="p"><span class="pre">|</span></span><span class="w"> </span><span class="pre">None</span></span><span class="w"> </span><span class="o"><span class="pre">=</span></span><span class="w"> </span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">rendering_order_method</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">str</span><span class="w"> </span><span class="p"><span class="pre">|</span></span><span class="w"> </span><span class="pre">None</span></span><span class="w"> </span><span class="o"><span class="pre">=</span></span><span class="w"> </span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">rendering_orders</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">LongTensor</span><span class="w"> </span><span class="p"><span class="pre">|</span></span><span class="w"> </span><span class="pre">None</span></span><span class="w"> </span><span class="o"><span class="pre">=</span></span><span class="w"> </span><span class="default_value"><span class="pre">None</span></span></em>, <em class="sig-param"><span class="n"><span class="pre">type_sequence</span></span><span class="p"><span class="pre">:</span></span><span class="w"> </span><span class="n"><span class="pre">LongTensor</span><span class="w"> </span><span class="p"><span class="pre">|</span></span><span class="w"> </span><span class="pre">None</span></span><span class="w"> </span><span class="o"><span class="pre">=</span></span><span class="w"> </span><span class="default_value"><span class="pre">None</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.tensor.GRAFXTensor" title="Link to this definition"></a></dt>
<dd><p>A dataclass representing a tensor-based graph for audio processing.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>node_types</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">LongTensor</span></code>) – Tensor of node types.</p></li>
<li><p><strong>edge_indices</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">LongTensor</span></code>) – Tensor of edge indices.</p></li>
<li><p><strong>counter</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="nb">int</span><span class="p">,</span> <span class="n">LongTensor</span><span class="p">]</span></code>) – Counter for the number of nodes.</p></li>
<li><p><strong>batch</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">bool</span></code>) – Indicates if the tensor is part of a batch.</p></li>
<li><p><strong>config</strong> (<a class="reference internal" href="#grafx.data.configs.NodeConfigs" title="grafx.data.configs.NodeConfigs"><code class="xref py py-class docutils literal notranslate"><span class="pre">NodeConfigs</span></code></a>) – Configuration for the nodes.</p></li>
<li><p><strong>config_hash</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>) – Hash of the configuration.</p></li>
<li><p><strong>invalid_op</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">str</span></code>) – Behavior when an invalid operation is performed.</p></li>
<li><p><strong>edge_types</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="n">LongTensor</span><span class="p">,</span> <span class="kc">None</span><span class="p">]</span></code>, <em>optional</em>) – Tensor of edge types
(default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
<li><p><strong>rendering_order_method</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="nb">str</span><span class="p">,</span> <span class="kc">None</span><span class="p">]</span></code>, <em>optional</em>) – Method for determining the rendering order
(default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
<li><p><strong>rendering_orders</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="n">LongTensor</span><span class="p">,</span> <span class="kc">None</span><span class="p">]</span></code>, <em>optional</em>) – Tensor of rendering orders
(default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
<li><p><strong>type_sequence</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">Union</span><span class="p">[</span><span class="n">LongTensor</span><span class="p">,</span> <span class="kc">None</span></code>], <em>optional</em>) – Tensor of type sequences
(default: <code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code>).</p></li>
</ul>
</dd>
<dt class="field-even">Variables<span class="colon">:</span></dt>
<dd class="field-even"><ul class="simple">
<li><p><strong>num_nodes</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – The number of nodes in the graph.</p></li>
<li><p><strong>num_edges</strong> (<code class="code highlight python docutils literal highlight-python"><span class="nb">int</span></code>) – The number of edges in the graph.</p></li>
</ul>
</dd>
</dl>
<dl class="py method">
<dt class="sig sig-object py" id="grafx.data.tensor.GRAFXTensor.to">
<span class="sig-name descname"><span class="pre">to</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">device</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.tensor.GRAFXTensor.to" title="Link to this definition"></a></dt>
<dd><p>Moves all tensor attributes to the specified device.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><p><strong>device</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">torch</span><span class="o">.</span><span class="n">device</span></code>) – The device to move the tensors to.</p>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p><code class="code highlight python docutils literal highlight-python"><span class="kc">None</span></code></p>
</dd>
</dl>
</dd></dl>

</dd></dl>

<dl class="py function" id="module-grafx.data.conversion">
<dt class="sig sig-object py" id="grafx.data.conversion.convert_to_tensor">
<span class="sig-name descname"><span class="pre">convert_to_tensor</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">G</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.conversion.convert_to_tensor" title="Link to this definition"></a></dt>
<dd><p>Convert a graph to a collection of tensors.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><p><strong>G</strong> (<a class="reference internal" href="#grafx.data.graph.GRAFX" title="grafx.data.graph.GRAFX"><code class="xref py py-class docutils literal notranslate"><span class="pre">GRAFX</span></code></a>) – The graph to convert.</p>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p>A tensor representation of the given graph.</p>
</dd>
<dt class="field-odd">Return type<span class="colon">:</span></dt>
<dd class="field-odd"><p><a class="reference internal" href="#grafx.data.tensor.GRAFXTensor" title="grafx.data.tensor.GRAFXTensor"><code class="xref py py-class docutils literal notranslate"><span class="pre">GRAFXTensor</span></code></a></p>
</dd>
</dl>
</dd></dl>

<dl class="py function" id="module-grafx.data.batch">
<dt class="sig sig-object py" id="grafx.data.batch.batch_grafx">
<span class="sig-name descname"><span class="pre">batch_grafx</span></span><span class="sig-paren">(</span><em class="sig-param"><span class="n"><span class="pre">G_list</span></span></em><span class="sig-paren">)</span><a class="headerlink" href="#grafx.data.batch.batch_grafx" title="Link to this definition"></a></dt>
<dd><p>Batch a list of graphs into a single large disconnected graph.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters<span class="colon">:</span></dt>
<dd class="field-odd"><p><strong>G_list</strong> (<code class="code highlight python docutils literal highlight-python"><span class="n">List</span><span class="p">[</span><span class="n">GRAFX</span><span class="p">]</span></code>) – A list of graphs to batch.</p>
</dd>
<dt class="field-even">Returns<span class="colon">:</span></dt>
<dd class="field-even"><p>A single batched graph.</p>
</dd>
<dt class="field-odd">Return type<span class="colon">:</span></dt>
<dd class="field-odd"><p><a class="reference internal" href="#grafx.data.graph.GRAFX" title="grafx.data.graph.GRAFX"><code class="xref py py-class docutils literal notranslate"><span class="pre">GRAFX</span></code></a></p>
</dd>
</dl>
</dd></dl>

</section>

        </article>
      </div>
      <footer>
        
        <div class="related-pages">
          <a class="next-page" href="render.html">
              <div class="page-info">
                <div class="context">
                  <span>Next</span>
                </div>
                <div class="title">grafx.render</div>
              </div>
              <svg class="furo-related-icon"><use href="#svg-arrow-right"></use></svg>
            </a>
          <a class="prev-page" href="../introduction/render.html">
              <svg class="furo-related-icon"><use href="#svg-arrow-right"></use></svg>
              <div class="page-info">
                <div class="context">
                  <span>Previous</span>
                </div>
                
                <div class="title">Batched Audio Processing</div>
                
              </div>
            </a>
        </div>
        <div class="bottom-of-page">
          <div class="left-details">
            <div class="copyright">
                Copyright &#169; 2024, Sungho Lee
            </div>
            Made with <a href="https://www.sphinx-doc.org/">Sphinx</a> and <a class="muted-link" href="https://pradyunsg.me">@pradyunsg</a>'s
            
            <a href="https://github.com/pradyunsg/furo">Furo</a>
            
          </div>
          <div class="right-details">
            
          </div>
        </div>
        
      </footer>
    </div>
    <aside class="toc-drawer">
      
      
      <div class="toc-sticky toc-scroll">
        <div class="toc-title-container">
          <span class="toc-title">
            On this page
          </span>
        </div>
        <div class="toc-tree-container">
          <div class="toc-tree">
            <ul>
<li><a class="reference internal" href="#">grafx.data</a><ul>
<li><a class="reference internal" href="#grafx.data.configs.NodeConfigs"><code class="docutils literal notranslate"><span class="pre">NodeConfigs</span></code></a></li>
<li><a class="reference internal" href="#grafx.data.graph.GRAFX"><code class="docutils literal notranslate"><span class="pre">GRAFX</span></code></a><ul>
<li><a class="reference internal" href="#grafx.data.graph.GRAFX.add"><code class="docutils literal notranslate"><span class="pre">add()</span></code></a></li>
<li><a class="reference internal" href="#grafx.data.graph.GRAFX.remove"><code class="docutils literal notranslate"><span class="pre">remove()</span></code></a></li>
<li><a class="reference internal" href="#grafx.data.graph.GRAFX.connect"><code class="docutils literal notranslate"><span class="pre">connect()</span></code></a></li>
<li><a class="reference internal" href="#grafx.data.graph.GRAFX.add_serial_chain"><code class="docutils literal notranslate"><span class="pre">add_serial_chain()</span></code></a></li>
</ul>
</li>
<li><a class="reference internal" href="#grafx.data.tensor.GRAFXTensor"><code class="docutils literal notranslate"><span class="pre">GRAFXTensor</span></code></a><ul>
<li><a class="reference internal" href="#grafx.data.tensor.GRAFXTensor.to"><code class="docutils literal notranslate"><span class="pre">to()</span></code></a></li>
</ul>
</li>
<li><a class="reference internal" href="#grafx.data.conversion.convert_to_tensor"><code class="docutils literal notranslate"><span class="pre">convert_to_tensor()</span></code></a></li>
<li><a class="reference internal" href="#grafx.data.batch.batch_grafx"><code class="docutils literal notranslate"><span class="pre">batch_grafx()</span></code></a></li>
</ul>
</li>
</ul>

          </div>
        </div>
      </div>
      
      
    </aside>
  </div>
</div><script src="../_static/jquery.js?v=5d32c60e"></script>
    <script src="../_static/_sphinx_javascript_frameworks_compat.js?v=2cd50e6c"></script>
    <script src="../_static/documentation_options.js?v=5929fcd5"></script>
    <script src="../_static/doctools.js?v=9a2dae69"></script>
    <script src="../_static/sphinx_highlight.js?v=dc90522c"></script>
    <script src="../_static/scripts/furo.js?v=5fa4622c"></script>
    </body>
</html>